import { Brand } from '../../../core/SDKBrand';
import { DesignSystemVersion } from '../../../core/SDKDesignSystemVersion';
import { Token } from '../../../model/tokens/SDKToken';
import { DTParsedNode } from './SDKDTJSONLoader';
import { DTPluginToSupernovaMapPack } from './SDKDTMapLoader';
import { DTTokenReferenceResolver } from './SDKDTTokenReferenceResolver';
export declare type DTProcessedTokenNode = {
    token: Token;
    originalType: string;
    path: Array<string>;
    key: string;
};
/** Utility to DS Tokens plugin JSON to Supernova entities */
export declare class DTJSONConverter {
    version: DesignSystemVersion;
    mapping: DTPluginToSupernovaMapPack;
    referenceResolver: DTTokenReferenceResolver;
    constructor(version: DesignSystemVersion, mapping: DTPluginToSupernovaMapPack);
    convertNodesToTokens(nodes: Array<DTParsedNode>, brand: Brand): Array<DTProcessedTokenNode>;
    private remapRootNodeKeys;
    private convertNodesToTokensForSupportedNodeTypes;
    private convertAtomicNode;
    private convertColorAtomicNode;
    private convertMeasureAtomicNode;
    private convertRadiusAtomicNode;
    private convertShadowAtomicNode;
    private convertBorderAtomicNode;
    private convertTypographyAtomicNode;
    private convertGenericAtomicNode;
    private convertReferencedNode;
    private convertPureReferencedNode;
    private convertComplexReferenceNode;
    private convertDTTypeToSupernovaType;
}
