import { Token, TokenGroup, TokenType } from '../../../..';
import { GroupTreeNode } from './SDKDTGroupTreeNode';
export declare type GroupTreeNodeWalker = (node: GroupTreeNode, path: GroupTreeNode[]) => void;
export declare type TokenTreeElement = Token | TokenGroup;
export declare class GroupTree extends GroupTreeNode {
    childType: TokenType;
    constructor(backingElement: TokenTreeElement);
    static populate(root: TokenTreeElement, elements: Array<TokenTreeElement>, parentChildrenMap: Map<string, Array<TokenTreeElement>>): GroupTree;
}
export declare function buildBrandedElementRoots(elements: TokenTreeElement[]): Map<string, Map<TokenType, GroupTree>>;
