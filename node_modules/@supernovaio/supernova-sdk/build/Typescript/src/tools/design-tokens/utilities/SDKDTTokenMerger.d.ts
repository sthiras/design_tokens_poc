import { Token } from '../../../model/tokens/SDKToken';
import { DTProcessedTokenNode } from './SDKDTJSONConverter';
export declare type DTTokenMergeDiff = {
    toUpdate: Array<DTProcessedTokenNode>;
    toCreate: Array<DTProcessedTokenNode>;
    toDelete: Array<DTProcessedTokenNode>;
    toCreateOrUpdate: Array<DTProcessedTokenNode>;
};
/** Utility allowing merging of two pools of tokens */
export declare class DTTokenMerger {
    constructor();
    static buildKey(path: Array<string>, name: string): string;
    buildPath(token: Token): Array<string>;
    buildNodeMap(nodes: Array<DTProcessedTokenNode>): Map<string, DTProcessedTokenNode>;
    convertBaseTokensToProcessedNode(tokens: Array<Token>): Array<DTProcessedTokenNode>;
    makeTokensDiff(existing: Array<Token>, extracted: Array<DTProcessedTokenNode>): DTTokenMergeDiff;
}
