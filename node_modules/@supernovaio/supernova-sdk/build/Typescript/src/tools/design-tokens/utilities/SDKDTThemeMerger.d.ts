import { DesignSystemVersion } from "../../../core/SDKDesignSystemVersion";
import { DTProcessedTokenNode } from "./SDKDTJSONConverter";
import { TokenTheme } from "../../../model/themes/SDKTokenTheme";
import { Token } from "../../../model/tokens/SDKToken";
export declare type DTThemeMergeDiff = {
    toUpdate: Array<DTProcessedTokenNode>;
    toCreate: Array<DTProcessedTokenNode>;
};
/** Utility allowing merging of two pools of tokens */
export declare class DTThemeMerger {
    private version;
    constructor(version: DesignSystemVersion);
    makeTheme(upstreamTokens: Array<Token>, upstreamTheme: TokenTheme, processedNodes: Array<DTProcessedTokenNode>, preciseCopy?: boolean): TokenTheme;
    inlineTokens(themeReplica: TokenTheme, tokensInThemeButNotInUpstream: Map<string, DTProcessedTokenNode>): void;
    replaceIdAcrossAllPossibleReferences(override: DTProcessedTokenNode, newId: string, allTokens: Array<DTProcessedTokenNode>): void;
    buildKey(path: Array<string>, name: string): string;
    buildPath(token: Token): Array<string>;
}
