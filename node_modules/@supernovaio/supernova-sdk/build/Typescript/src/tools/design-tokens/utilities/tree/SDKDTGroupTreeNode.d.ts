import { Token, TokenGroup } from '../../../..';
import { GroupTree } from './SDKDTGroupTree';
export declare type GroupTreeNodeWalker = (node: GroupTreeNode, path: GroupTreeNode[]) => void;
export declare type TokenTreeElement = Token | TokenGroup;
export declare class GroupTreeNode {
    children: GroupTreeNode[];
    element: TokenTreeElement;
    tree: GroupTree;
    get isGroup(): boolean;
    get name(): string;
    constructor(element: TokenTreeElement, tree: GroupTree);
    applyDefaultSorting(): void;
    protected addChildInternal(child: GroupTreeNode, atIndex?: number): void;
    protected populate(childrenMap: Map<string, TokenTreeElement[]>): void;
    private createGroupChild;
    addChildGroup(groupElement: TokenTreeElement): GroupTreeNode;
    getOrCreateGroup(path: Array<string>): GroupTreeNode;
    forEach(callback: GroupTreeNodeWalker, leafsFirst?: boolean): void;
    private forEachInternal;
}
