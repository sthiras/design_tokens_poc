import { TokenGroup } from '../model/groups/SDKTokenGroup';
import { TokenTheme } from '../model/themes/SDKTokenTheme';
import { Token } from '../model/tokens/SDKToken';
import { DataCore } from './data/SDKDataCore';
import { Brand } from './SDKBrand';
import { Supernova } from './SDKSupernova';
export declare type TokenWriteResponse = {
    result: 'success' | 'error';
    errors: Array<string>;
    tokens: Array<Token>;
    tokenGroups: Array<TokenGroup>;
};
export declare type TokenThemeWriteResponse = {
    result: 'success' | 'error';
    errors: Array<string>;
    theme: TokenTheme;
};
export declare class BrandWriter {
    /** Internal: Associated brand */
    brand: Brand;
    /** Internal: Engine */
    engine: Supernova;
    /** Internal: Data core */
    dataCore: DataCore;
    constructor(engine: Supernova, brand: Brand);
    /** Fetches all tokens available in this design system version belonging to this specific brand */
    writeTokens(tokens: Array<Token>, groups: Array<TokenGroup>, deleteTokens: Array<Token>): Promise<TokenWriteResponse>;
    writeTheme(theme: TokenTheme): Promise<TokenThemeWriteResponse>;
}
