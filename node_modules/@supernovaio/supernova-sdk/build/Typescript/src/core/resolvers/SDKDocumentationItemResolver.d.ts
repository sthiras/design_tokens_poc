import { ExporterCustomBlock } from "../../model/exporters/custom_blocks/SDKExporterCustomBlock";
import { DocumentationConfiguration } from "../../model/documentation/SDKDocumentationConfiguration";
import { DocumentationGroupModel } from "../../model/documentation/SDKDocumentationGroup";
import { DocumentationItemModel, DocumentationItem } from "../../model/documentation/SDKDocumentationItem";
import { DocumentationPageModel } from "../../model/documentation/SDKDocumentationPage";
import { DesignSystem } from "../SDKDesignSystem";
import { DesignSystemVersion } from "../SDKDesignSystemVersion";
export declare class DocumentationItemResolver {
    hashedItems: Map<string, DocumentationItemModel>;
    resolvedItems: Map<string, DocumentationItem>;
    customBlocks: Array<ExporterCustomBlock>;
    configuration: DocumentationConfiguration;
    workspaceHandle: string;
    designSystem: DesignSystem;
    version: DesignSystemVersion;
    docsUrl: string | undefined;
    constructor(customBlocks: Array<ExporterCustomBlock>, configuration: DocumentationConfiguration, version: DesignSystemVersion, workspaceHandle: string, docsUrl: string | undefined);
    resolveItemData(pageDetails: Array<DocumentationPageModel>, groupDetails: Array<DocumentationGroupModel>): Promise<Array<DocumentationItem>>;
    private resolveItemsForGroup;
    private resolveBlockChains;
    private resolveBlockGroup;
    /** Create URL pointing to the deployed documentation page hosted on Supernova side. Will be empty if there was nothing deployed, or if not hosted at Supernova */
    private deployedUrl;
    /** Create editor URL pointing to editable page. Since Supernova doesn't link to pages directly yet, this will for now open the editor */
    private editorUrl;
    /** Create page URL or group URL pointing to the first contained page */
    private pageUrl;
    /** Find first showable page from the top of the provided root */
    private firstPageFromTop;
    /** Slugify text to be usable as URL */
    private slugify;
}
