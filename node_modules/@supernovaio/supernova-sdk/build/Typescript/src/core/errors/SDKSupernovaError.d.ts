/** Supernova SDK-specific error type */
declare enum SupernovaErrorType {
    /** Thrown when request was performed but server responded with error */
    responseError = "response",
    /** Thrown when request failed to perform, for example when network is unreachable */
    requestError = "request",
    /** Thrown when request was performed successfully, but SDK data validation or processing failed */
    computeError = "compute",
    /** Thrown when data processing failed */
    processingError = "processing"
}
/** Supernova SDK-specific error. Contains useful information for debugging problems, depending where the problem originated from */
export declare class SupernovaError extends Error {
    /** Type of the error thrown */
    type: SupernovaErrorType;
    /** Status within 2xx - 5xx range */
    status: number | null;
    /** Machine-processable label error unique to each error message thrown by Supernova data server */
    label: string | null;
    constructor(message: string, type: SupernovaErrorType);
    static fromSDKError(message: string): SupernovaError;
    static fromProcessingError(message: string): SupernovaError;
}
export {};
