import { TokenType } from '../enums/SDKTokenType';
export interface TokenGroupRemoteModel {
    id: string;
    brandId: string;
    tokenType: TokenType;
    designSystemVersionId: string;
    persistentId: string;
    isRoot: boolean;
    meta: {
        name: string;
        description: string;
    };
    childrenIds: string[];
    createdAt?: string;
    updatedAt?: string;
}
export declare class TokenGroup {
    id: string;
    versionedId: string;
    brandId: string;
    designSystemVersionId: string;
    name: string;
    description: string;
    path: Array<string>;
    subgroups: Array<TokenGroup>;
    tokenType: TokenType;
    isRoot: boolean;
    childrenIds: Array<string>;
    tokenIds: Array<string>;
    parent: TokenGroup | null;
    sortOrder: number;
    createdAt: Date | null;
    updatedAt: Date | null;
    constructor(model: TokenGroupRemoteModel);
    addChild(group: TokenGroup): void;
    addChildren(groups: Array<TokenGroup>): void;
    setPath(segments: Array<string>): void;
    setParent(parent: TokenGroup | null): void;
    setSortOrder(order: number): void;
    toWriteObject(): TokenGroupRemoteModel;
    toMutatedObject(childrenIds: Array<string>): TokenGroup;
}
