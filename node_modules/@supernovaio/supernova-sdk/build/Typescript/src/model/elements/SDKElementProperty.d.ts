import { ElementPropertyOption, ElementPropertyOptionRemoteModel } from './SDKElementPropertyOption';
export declare enum ElementPropertyType {
    text = "Text",
    number = "Number",
    boolean = "Boolean",
    select = "Select",
    generic = "Generic",
    link = "Link",
    url = "URL"
}
export declare enum ElementPropertyTargetElementType {
    token = "Token",
    component = "Component",
    documentationPage = "DocumentationPage"
}
export declare enum ElementPropertyLinkElementType {
    documentationItem = "DocumentationItem",
    figmaComponent = "FigmaComponent"
}
export interface ElementPropertyRemoteModel {
    id: string;
    persistentId: string;
    designSystemVersionId: string;
    meta: {
        name: string;
        description: string;
    };
    codeName: string;
    type: ElementPropertyType;
    targetElementType: ElementPropertyTargetElementType;
    linkElementType?: ElementPropertyLinkElementType;
    options?: Array<ElementPropertyOptionRemoteModel>;
}
export declare class ElementProperty {
    /** Unique id of the component property (data column) */
    id: string;
    /** Unique persistent id of the component property (data column) */
    persistentId: string;
    /** Specific design system version this property is contained in */
    designSystemVersionId: string;
    /** Property name */
    name: string;
    /** Code property name - guaranteed to be present, unique and code-safe */
    codeName: string;
    /** Property description */
    description: string | null;
    /** Base type */
    propertyType: ElementPropertyType;
    /** Type of design system object this property is contained in - for example, if this property was configured for DS components, this will be of type `component` */
    targetElementType: ElementPropertyTargetElementType;
    /** Type of design system object this property can be configured with */
    linkElementType: ElementPropertyLinkElementType | null;
    /** Property options, only available for `select` type */
    options: Array<ElementPropertyOption> | null;
    constructor(model: ElementPropertyRemoteModel);
}
