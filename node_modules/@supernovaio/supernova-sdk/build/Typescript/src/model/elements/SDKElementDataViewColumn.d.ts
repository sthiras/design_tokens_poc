export declare enum ElementDataViewColumnType {
    baseProperty = "BaseProperty",
    propertyDefinition = "PropertyDefinition",
    theme = "Theme"
}
export declare enum ElementDataViewColumnBasePropertyType {
    name = "Name",
    description = "Description",
    value = "Value",
    updatedAt = "UpdatedAt"
}
export interface ElementDataViewColumnRemoteModel {
    id: string;
    persistentId: string;
    type: ElementDataViewColumnType;
    basePropertyType?: ElementDataViewColumnBasePropertyType;
    propertyDefinitionId?: string;
    themeId?: string;
    width: number;
}
export declare class ElementDataViewColumn {
    /** Unique id of data view column, different across versions */
    id: string;
    /** Unique persistent id of the data view column */
    persistentId: string;
    /** Type of the contained property */
    type: ElementDataViewColumnType;
    /** Type of the base property, if element column type === BaseProperty */
    basePropertyType: ElementDataViewColumnBasePropertyType | null;
    /** Data view columns */
    propertyDefinitionId: string | null;
    /** Theme id column points to */
    themeId: string | null;
    /** Column width */
    width: number;
    constructor(model: ElementDataViewColumnRemoteModel);
}
