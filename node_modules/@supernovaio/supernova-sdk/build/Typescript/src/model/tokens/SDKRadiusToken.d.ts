import { Brand, ElementProperty } from '../..';
import { DesignSystemVersion } from '../../core/SDKDesignSystemVersion';
import { ElementPropertyValue } from '../elements/values/SDKElementPropertyValue';
import { RadiusTokenRemoteModel, TokenRemoteModel } from './remote/SDKRemoteTokenModel';
import { RadiusTokenRemoteValue } from './remote/SDKRemoteTokenValue';
import { Token } from './SDKToken';
import { RadiusTokenValue } from './SDKTokenValue';
export declare class RadiusToken extends Token {
    value: RadiusTokenValue;
    constructor(version: DesignSystemVersion, baseToken: TokenRemoteModel, value: RadiusTokenValue, alias: RadiusToken | null, properties: Array<ElementProperty>, propertyValues: Array<ElementPropertyValue>);
    static create(version: DesignSystemVersion, brand: Brand, name: string, description: string, value: string, alias: RadiusToken | null, properties: Array<ElementProperty>, propertyValues: Array<ElementPropertyValue>): RadiusToken;
    static radiusValueFromDefinition(definition: string | number): RadiusTokenValue;
    toWriteObject(): RadiusTokenRemoteModel;
    static valueToWriteObject(value: RadiusTokenValue): {
        aliasTo: string | undefined;
        value: RadiusTokenRemoteValue;
    };
}
