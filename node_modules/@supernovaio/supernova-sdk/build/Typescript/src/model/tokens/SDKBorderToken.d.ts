import { Brand, ElementProperty } from '../..';
import { DesignSystemVersion } from '../../core/SDKDesignSystemVersion';
import { DTTokenReferenceResolver } from '../../tools/design-tokens/utilities/SDKDTTokenReferenceResolver';
import { ElementPropertyValue } from '../elements/values/SDKElementPropertyValue';
import { BorderTokenRemoteModel, TokenRemoteModel } from './remote/SDKRemoteTokenModel';
import { BorderTokenRemoteValue } from './remote/SDKRemoteTokenValue';
import { Token } from './SDKToken';
import { BorderTokenValue } from './SDKTokenValue';
export declare class BorderToken extends Token {
    value: BorderTokenValue;
    constructor(version: DesignSystemVersion, baseToken: TokenRemoteModel, value: BorderTokenValue, alias: BorderToken | null, properties: Array<ElementProperty>, propertyValues: Array<ElementPropertyValue>);
    static create(version: DesignSystemVersion, brand: Brand, name: string, description: string, value: object, alias: BorderToken | null, referenceResolver: DTTokenReferenceResolver, properties: Array<ElementProperty>, propertyValues: Array<ElementPropertyValue>): BorderToken;
    static borderValueFromDefinition(definition: object, referenceResolver: DTTokenReferenceResolver): BorderTokenValue;
    toWriteObject(): BorderTokenRemoteModel;
    static valueToWriteObject(value: BorderTokenValue): {
        aliasTo: string | undefined;
        value: BorderTokenRemoteValue;
    };
}
