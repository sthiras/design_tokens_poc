import { BlurType } from "../../enums/SDKBlurType";
import { BorderPosition } from "../../enums/SDKBorderPosition";
import { GradientType } from "../../enums/SDKGradientType";
import { ShadowType } from "../../enums/SDKShadowType";
import { TextCase } from "../../enums/SDKTextCase";
import { TextDecoration } from "../../enums/SDKTextDecoration";
import { Unit } from "../../enums/SDKUnit";
import { ColorTokenRemoteData, FontTokenRemoteData, MeasureTokenRemoteData } from "./SDKRemoteTokenData";
export declare type ColorTokenRemoteValue = string;
export declare type TextTokenRemoteValue = string;
export declare type TypographyTokenRemoteValue = {
    font: FontTokenRemoteData;
    fontSize: MeasureTokenRemoteData;
    textDecoration: TextDecoration;
    textCase: TextCase;
    letterSpacing: MeasureTokenRemoteData;
    lineHeight: MeasureTokenRemoteData | null;
    paragraphSpacing: MeasureTokenRemoteData;
    paragraphIndent: MeasureTokenRemoteData;
};
export declare type RadiusTokenRemoteValue = {
    radius: MeasureTokenRemoteData;
    topLeft: MeasureTokenRemoteData | null;
    topRight: MeasureTokenRemoteData | null;
    bottomLeft: MeasureTokenRemoteData | null;
    bottomRight: MeasureTokenRemoteData | null;
};
export declare type ShadowTokenRemoteValue = {
    isEnabled: boolean;
    color: ColorTokenRemoteData;
    x: MeasureTokenRemoteData;
    y: MeasureTokenRemoteData;
    radius: MeasureTokenRemoteData;
    spread: MeasureTokenRemoteData;
    opacity: number;
    type: ShadowType;
};
export declare type MeasureTokenRemoteValue = {
    unit: Unit;
    measure: number;
};
export declare type FontTokenRemoteValue = {
    family: string;
    subfamily: string;
};
export declare type BorderTokenRemoteValue = {
    isEnabled: boolean;
    color: ColorTokenRemoteData;
    width: MeasureTokenRemoteData;
    position: BorderPosition;
};
export declare type GradientTokenRemoteValue = {
    to: {
        x: number;
        y: number;
    };
    from: {
        x: number;
        y: number;
    };
    type: GradientType;
    aspectRatio: number;
    stops: Array<GradientStopRemoteValue>;
};
export declare type GradientStopRemoteValue = {
    position: number;
    color: ColorTokenRemoteData;
};
export declare type BlurTokenRemoteValue = {
    type: BlurType;
    radius: MeasureTokenRemoteData;
};
